//Count of Equivalent Subarrays
import java.util.*;
public class HashmapProblem 
{
	public static int countDistinct(int arr[])
	{
		HashMap<Integer,Integer> map = new HashMap<>();
		HashSet<Integer> set = new HashSet<Integer>();
		for(int i=0;i<arr.length;i++)
		{
			set.add(arr[i]);
		}
		int k = set.size();
		
        int i=-1;
        int j=-1;
        int count=0;
        
        while(true)
        {
            boolean f1 = false;
            boolean f2 = false;
            while(i<arr.length-1)
            {
                f1=true;
                i++;
                map.put(arr[i],map.getOrDefault(arr[i],0)+1);
                if(map.size()==k)
                {
                	count+=arr.length-i;
                	break;
                }
            }
            while(j<i)
            {
                f2=true;
                j++;
                if(map.get(arr[j])==1)
                	map.remove(arr[j]);
                else
                	map.put(arr[j],map.getOrDefault(arr[j], 0)-1);
                
                if(map.size()==k)
                	count+=arr.length-i;
                else if(map.size()<k)
                	break;
            }
            if(f1==false && f2==false)
               break;
        }
        return count;
	}
	public static void main(String[] args) 
    {
		int arr[] = {2,5,3,5,2,4,1,3,1,4};
		
		System.out.println(countDistinct(arr));
    }
}
