//Length of the largest subarray with contiguous elements
import java.util.*;
public class HashmapProblem 
{
	public static int findLength(int[] arr)
	{
		int n=arr.length;
		int max_len = Integer.MIN_VALUE;
		
		for(int i=0;i<n-1;i++)
		{
			int max = arr[i];
			int min = arr[i];
			
			HashSet<Integer> set = new HashSet<Integer>();
			set.add(arr[i]);
			for(int j= i+1;j<n;j++)
			{
				if(set.contains(arr[j]))
					break;
			    set.add(arr[j]);
			    
			    min = Math.min(arr[j], min);
			    max = Math.max(arr[j], max);
			    
			    if(max-min==j-1)
			    {
			    	int len = j-i+1;
			    	if(max_len<len)
			    		max_len=len;
			    }
			}
		}
		return max_len;
	}
	public static void main(String[] args) 
	{
		int arr[] =  {10, 12, 12, 10, 10, 11, 10};
	    System.out.println("Length of the longest contiguous subarray is " +
	                           findLength(arr));
	}
}
